<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MonoGame.QuakeConsole.ManualInterpreter</name>
    </assembly>
    <members>
        <member name="T:QuakeConsole.ManualInterpreter">
            <summary>
            Interpreter which executes input as user defined commands.
            </summary>
        </member>
        <member name="P:QuakeConsole.ManualInterpreter.EchoEnabled">
            <summary>
            Gets or sets if the user entered command should be shown in the output.
            </summary>
        </member>
        <member name="M:QuakeConsole.ManualInterpreter.Execute(QuakeConsole.IConsoleOutput,System.String)">
            <summary>
            Executes a command that is matched by the first input word.
            </summary>
            <param name="output">Console output to append any output messages.</param>
            <param name="input">Command to execute.</param>
        </member>
        <member name="M:QuakeConsole.ManualInterpreter.Reset">
            <summary>
            Resets the interpreter by clearing any registered commands.
            </summary>
        </member>
        <member name="M:QuakeConsole.ManualInterpreter.Autocomplete(QuakeConsole.IConsoleInput,System.Boolean)">
            <summary>
            Tries to autocomplete the current input value in the <see cref="T:QuakeConsole.Console"/> <see cref="T:QuakeConsole.ConsoleInput"/>.
            </summary>
            <param name="input">Console input.</param>
            <param name="forward">True if user wants to autocomplete to the next value; false if to the previous value.</param>
        </member>
        <member name="M:QuakeConsole.ManualInterpreter.RegisterCommand(System.String,System.Action{System.String[]})">
            <summary>
            Registers a new command with the interpreter.
            </summary>
            <param name="commandName">
            Name of the command. This is the name user must enter into the <see cref="T:QuakeConsole.Console"/> to execute the command.
            </param>
            <param name="command">Command to interpreter.</param>
        </member>
        <member name="M:QuakeConsole.ManualInterpreter.RegisterCommand(System.String,System.Func{System.String[],System.String})">
            <summary>
            Registers a new command with the interpreter.
            </summary>
            <param name="commandName">
            Name of the command. This is the name user must enter into the <see cref="T:QuakeConsole.Console"/> to execute the command.
            </param>
            <param name="command">Command to interpreter.</param>
        </member>
        <member name="M:QuakeConsole.ManualInterpreter.UnregisterCommand(System.String)">
            <summary>
            Unregisters a command with the provided name if any.
            </summary>
            <param name="commandName">Command name to remove.</param>
        </member>
        <member name="M:QuakeConsole.EnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> extension method that searches for the first match and returns its index.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="source">Input enumerable to work on.</param>
            <param name="predicate">The predicate.</param>
            <returns>The index of the first element matching.</returns>
        </member>
    </members>
</doc>
